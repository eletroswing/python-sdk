"""
    Module: subscription
"""
from openpix.http import HttpClient
openpix.resources.
from typing import List

class Subscription:
    """
    Access to Subscription  

    [Click here for more info](https://developers.woovi.com/api#tag/subscription)  # pylint: disable=line-too-long
    """
    def __init__(self, HttpClient: HttpClient):
        self._client = HttpClient

    """Get one subscription
    Args:
        id (str): The globalID or correlationID of the subscription.
    
        [Click here for more info](https://developers.openpix.com.br/api#tag/subscription/paths/~1api~1v1~1subscriptions~1%7Bid%7D/get)
    """
    def get(self, id: str) -> subscription_types.SubscriptionGet:
        return self._client.get(path=f'/api/v1/subscriptions/{id}')

    """Get one subscription
    Args:
        customer (customer):
            - name: str
            - email: str
            - phone: str
            - taxID:    
                - taxID: str
                - type: str
        
        value (int): Value in cents of this subscription
        comment (str): Comment to be added in infoPagador
        additionalInfo (list(additionalInfo)):
            [
                - key: str
                - value: str
            ]
        dayGenerateCharge (int): Day of the month that the charges will be generated. Maximum of 31.
        chargeType (str): The charge type is used to determine whether charges generated by the subscription will have fines and interests
        dayDue (int): Days that the charge will take to expire from the generation day.
        correlationID (int): Your correlation ID to keep track of this subscription
        
        [Click here for more info](https://developers.openpix.com.br/api#tag/subscription/paths/~1api~1v1~1subscriptions/post)
    """
    def create(self, customer: subscription_types.Customer, value: int, comment: str, additionalInfo: List[subscription_types.AditionalInfo], dayGenerateCharge: int, chargeType: str, dayDue: str, correlationID: str):
        return self._client.post(path=f'/api/v1/subscriptions', data={
            "value": value,
            "customer": {
                "name": customer.name,
                "taxID": customer.taxID.taxID,
                "email": customer.email,
                "phone": customer.phone,
            },
            "dayGenerateCharge": dayGenerateCharge,
            "chargeType": chargeType,
            "comment": comment,
            "additionalInfo": additionalInfo,
            "dayDue": dayDue,
            "correlationID": correlationID
        }) 